<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alex&#39;s Website</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-11T12:17:28.930Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Alex Huang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【python】自动发送微信消息或文件</title>
    <link href="http://example.com/2022/05/11/%E3%80%90python%E3%80%91%E8%87%AA%E5%8A%A8%E5%8F%91%E9%80%81%E5%BE%AE%E4%BF%A1%E6%B6%88%E6%81%AF%E6%88%96%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2022/05/11/%E3%80%90python%E3%80%91%E8%87%AA%E5%8A%A8%E5%8F%91%E9%80%81%E5%BE%AE%E4%BF%A1%E6%B6%88%E6%81%AF%E6%88%96%E6%96%87%E4%BB%B6/</id>
    <published>2022-05-11T12:17:07.000Z</published>
    <updated>2022-05-11T12:17:28.930Z</updated>
    
    <content type="html"><![CDATA[<p><strong>通过wxauto和pyautogui库实现</strong></p><p>1、安装wxauto和pyautogui库，pip安装即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install wxauto</span><br><span class="line">pip install pyautogui</span><br></pre></td></tr></table></figure><p>2、登录微信。</p><p>3、获取返回桌面的位置及微信快捷方式在桌面的位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> position</span><br><span class="line"><span class="keyword">import</span> pyautogui, sys</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;press ctrl-c to quit.&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x, y = pyautogui.position()</span><br><span class="line">        positionStr = <span class="string">&quot;X: &quot;</span> + <span class="built_in">str</span>(x).rjust(<span class="number">4</span>) + <span class="string">&quot;Y: &quot;</span> + <span class="built_in">str</span>(y).rjust(<span class="number">4</span>)</span><br><span class="line">        <span class="built_in">print</span>(positionStr, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\b&quot;</span> * <span class="built_in">len</span>(positionStr),end=<span class="string">&quot;&quot;</span>, flush=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>4、修改pyautogui库的操作，即修改代码中的click和doubleclick的像素位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> wxauto <span class="keyword">import</span> WeChat</span><br><span class="line"><span class="keyword">import</span> pyautogui, sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;请输入发送人的备注：&#x27;</span>)</span><br><span class="line">who = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;请输入推迟打开微信时间(s):&quot;</span>)</span><br><span class="line">t_delay1 = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;请输入推迟发送时间(s):&quot;</span>)</span><br><span class="line">t_delay2 = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;请选择发送消息还是文件:1.消息, 2.文件。输入1或2。&quot;</span>)</span><br><span class="line">chattype = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> chattype == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请输入发送的消息：&quot;</span>)</span><br><span class="line">    chat_message = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">elif</span> chattype == <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请输入文件的路径：&quot;</span>)</span><br><span class="line">    chat_file_path = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line">time.sleep(t_delay1)    <span class="comment">#推迟打开微信时间</span></span><br><span class="line"></span><br><span class="line">pyautogui.click(<span class="number">2559</span>,<span class="number">1405</span>)      <span class="comment">#返回桌面---此处需要自己获取位置</span></span><br><span class="line">pyautogui.doubleClick(<span class="number">38</span>,<span class="number">1143</span>)  <span class="comment">#打开微信---此处需要自己获取位置</span></span><br><span class="line"></span><br><span class="line">wx = WeChat()  <span class="comment">#获取当前微信客户端</span></span><br><span class="line"></span><br><span class="line">wx.GetSessionList()     <span class="comment"># 获取会话列表</span></span><br><span class="line">wx.ChatWith(who)</span><br><span class="line"></span><br><span class="line">time.sleep(t_delay2)    <span class="comment">#推迟发送时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> chattype == <span class="number">1</span>:</span><br><span class="line">    wx.SendMsg(chat_message)</span><br><span class="line"><span class="keyword">elif</span> chattype == <span class="number">2</span>:</span><br><span class="line">    wx.SendFiles(chat_file_path)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;通过wxauto和pyautogui库实现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、安装wxauto和pyautogui库，pip安装即可。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【python】自动获取鼠标位置</title>
    <link href="http://example.com/2022/05/11/%E3%80%90python%E3%80%91%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E4%BD%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/05/11/%E3%80%90python%E3%80%91%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E4%BD%8D%E7%BD%AE/</id>
    <published>2022-05-11T12:16:25.000Z</published>
    <updated>2022-05-11T12:16:42.809Z</updated>
    
    <content type="html"><![CDATA[<p><strong>通过pyautogui这个库来实现。</strong></p><p> 1、安装pyautogui库，通过pip安装即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyautogui</span><br></pre></td></tr></table></figure><p> 2、具体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> position</span><br><span class="line"><span class="keyword">import</span> pyautogui, sys</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;press ctrl-c to quit.&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x, y = pyautogui.position()</span><br><span class="line">        positionStr = <span class="string">&quot;X: &quot;</span> + <span class="built_in">str</span>(x).rjust(<span class="number">4</span>) + <span class="string">&quot;Y: &quot;</span> + <span class="built_in">str</span>(y).rjust(<span class="number">4</span>)</span><br><span class="line">        <span class="built_in">print</span>(positionStr, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\b&quot;</span> * <span class="built_in">len</span>(positionStr),end=<span class="string">&quot;&quot;</span>, flush=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;通过pyautogui这个库来实现。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 1、安装pyautogui库，通过pip安装即可&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《基础知识系列》-位（bit）、字节（byte）、字（word）、KB、MB、GB、TB</title>
    <link href="http://example.com/2022/05/11/%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%B3%BB%E5%88%97%E3%80%8B-%E4%BD%8D%EF%BC%88bit%EF%BC%89%E3%80%81%E5%AD%97%E8%8A%82%EF%BC%88byte%EF%BC%89%E3%80%81%E5%AD%97%EF%BC%88word%EF%BC%89%E3%80%81KB%E3%80%81MB%E3%80%81GB%E3%80%81TB/"/>
    <id>http://example.com/2022/05/11/%E3%80%8A%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%B3%BB%E5%88%97%E3%80%8B-%E4%BD%8D%EF%BC%88bit%EF%BC%89%E3%80%81%E5%AD%97%E8%8A%82%EF%BC%88byte%EF%BC%89%E3%80%81%E5%AD%97%EF%BC%88word%EF%BC%89%E3%80%81KB%E3%80%81MB%E3%80%81GB%E3%80%81TB/</id>
    <published>2022-05-11T12:15:34.000Z</published>
    <updated>2022-05-11T12:15:55.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><p><strong>1、位/比特（bit）：</strong></p><p>位/比特（bit）是计算机中<strong>最小的数据存储单位</strong>。二进制中每一位的状态只能是0或1。</p><p><strong>2、字节（byte）：</strong></p><p>字节（byte）由8位（bit）组成，是<strong>存储空间的基本计量单位</strong>，通常1个字节可以存储半个汉字或1个英文字母。</p><p><strong>3、字（word）：</strong></p><p>字（word）是计算机进行数据存储、处理和运算的单位，由若干个字节（byte）组成。字的位数叫字长，不同处理器性能的计算机中字长不同，例如32位处理器中，1字=32位=4字节，64位处理器中，1字=64位=8字节。</p><h2 id="二、相互转换"><a href="#二、相互转换" class="headerlink" title="二、相互转换"></a>二、相互转换</h2><p>1B（byte，字节）= 8 bit；</p><p>1KB（Kibibyte，千字节）=1024B= 2^10 B；</p><p>1MB（Mebibyte，兆字节，百万字节，简称“兆”）=1024KB= 2^20 B；</p><p>1GB（Gibibyte，吉字节，十亿字节，又称“千兆”）=1024MB= 2^30 B；</p><p>1TB（Tebibyte，万亿字节，太字节）=1024GB= 2^40 B；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、定义&quot;&gt;&lt;a href=&quot;#一、定义&quot; class=&quot;headerlink&quot; title=&quot;一、定义&quot;&gt;&lt;/a&gt;一、定义&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、位/比特（bit）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;位/比特（bit）是计算机中&lt;strong&gt;最小的</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【python】python3安装worldcloud库</title>
    <link href="http://example.com/2022/05/11/%E3%80%90python%E3%80%91python3%E5%AE%89%E8%A3%85worldcloud%E5%BA%93/"/>
    <id>http://example.com/2022/05/11/%E3%80%90python%E3%80%91python3%E5%AE%89%E8%A3%85worldcloud%E5%BA%93/</id>
    <published>2022-05-11T12:13:48.000Z</published>
    <updated>2022-05-11T12:14:25.305Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>1. 查看python版本：</strong><br>win+r 打开cmd 输入 python –version回车</p><p> <strong>2. 根据python版本选择对应的词云版本：</strong><br>例如cp310代表python3.10的版本</p><p> <strong>3. 从<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud">https://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud</a> 下载对应的词云库</strong><br>例如wordcloud‑1.8.1‑cp310‑cp310‑win_amd64.whl<br>注意选择电脑位数，通常为64位，即amd64</p><p> <strong>4. 在python script目录下cmd命令：</strong><br>pip install wordcloud-1.8.1-cp39-cp39-win_amd64.whl 回车</p><p>Successfully installed wordcloud-1.8.1表示成功安装。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; &lt;strong&gt;1. 查看python版本：&lt;/strong&gt;&lt;br&gt;win+r 打开cmd 输入 python –version回车&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;2. 根据python版本选择对应的词云版本：&lt;/strong&gt;&lt;br&gt;例如cp310代表python3</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>工作第77天</title>
    <link href="http://example.com/2021/09/16/%E5%B7%A5%E4%BD%9C%E7%AC%AC%E4%B8%80%E7%99%BE%E5%A4%A9/"/>
    <id>http://example.com/2021/09/16/%E5%B7%A5%E4%BD%9C%E7%AC%AC%E4%B8%80%E7%99%BE%E5%A4%A9/</id>
    <published>2021-09-16T07:21:45.000Z</published>
    <updated>2021-09-16T07:26:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>2021年7月1日，正式入职了，到今天，总计77天。<br>工作性质很特殊，第一个月写了一个月的项目书，<br>第二个月开始设计点技术，但是不深，公司什么都没有，什么都干不成。<br>第三个月，村里打电话让我回去当大学生村官，笑死哈哈哈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年7月1日，正式入职了，到今天，总计77天。&lt;br&gt;工作性质很特殊，第一个月写了一个月的项目书，&lt;br&gt;第二个月开始设计点技术，但是不深，公司什么都没有，什么都干不成。&lt;br&gt;第三个月，村里打电话让我回去当大学生村官，笑死哈哈哈。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="http://example.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="rubbish" scheme="http://example.com/tags/rubbish/"/>
    
  </entry>
  
  <entry>
    <title>Windows下使用github搭建个人博客</title>
    <link href="http://example.com/2021/04/15/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2021/04/15/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-04-15T07:47:49.000Z</published>
    <updated>2021-04-15T08:08:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="1-1-环境搭建"><a href="#1-1-环境搭建" class="headerlink" title="1.1 环境搭建"></a>1.1 环境搭建</h3><p>安装git for windows及node.js</p><p>① git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>② node.js：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a> </p><h3 id="1-2-账号注册"><a href="#1-2-账号注册" class="headerlink" title="1.2 账号注册"></a>1.2 账号注册</h3><p>注册一个github帐号：<a href="https://github.com/">https://github.com/</a></p><h2 id="二、搭建博客"><a href="#二、搭建博客" class="headerlink" title="二、搭建博客"></a>二、搭建博客</h2><h3 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1 创建仓库"></a>2.1 创建仓库</h3><p><strong>github上新建一个名为“用户名.github.io”的仓库（用户名为你的GitHub注册用户名，非昵称）</strong></p><p>博客若不绑定个人域名，则直接通过https://用户名.github.io/访问你的博客</p><h3 id="2-2-配置SSH"><a href="#2-2-配置SSH" class="headerlink" title="2.2 配置SSH"></a>2.2 配置SSH</h3><p>调用git bash，检查本机已存在的ssh密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;. ssh</span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git</p><p>使用以下命令生成ssh密钥，“邮箱地址”为你github帐号的邮箱地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>找到自动生成的.ssh\id_rsa.pub文件，用记事本打开并复制里面的内容，进入github主页的个人设置界面，找到SSH and GPG keys， 新建一个SSH key，把复制的内容粘贴到Key里面，保存。</p><h3 id="2-3-测试SSH是否配置成功"><a href="#2-3-测试SSH是否配置成功" class="headerlink" title="2.3 测试SSH是否配置成功"></a>2.3 测试SSH是否配置成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>按指示完成后若提示：</p><p>You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>说明SSH已经配置成功。</p><p>接着配置以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的github用户&quot;</span><br><span class="line">$ git config --global user.email  &quot;你的github注册邮箱&quot;</span><br></pre></td></tr></table></figure><h2 id="三、使用博客（hexo）"><a href="#三、使用博客（hexo）" class="headerlink" title="三、使用博客（hexo）"></a>三、使用博客（hexo）</h2><h3 id="3-1-安装hexo"><a href="#3-1-安装hexo" class="headerlink" title="3.1 安装hexo"></a>3.1 安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="3-2-初始化"><a href="#3-2-初始化" class="headerlink" title="3.2 初始化"></a>3.2 初始化</h3><p>新建一个文件夹，用于存放与博客相关的东西，如D:\web</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;d&#x2F;web&#x2F;</span><br></pre></td></tr></table></figure><p>在当前目录下，调用git bash：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>此时会自动下载一系列文件到该目录下。</p><h3 id="3-3-配置文件"><a href="#3-3-配置文件" class="headerlink" title="3.3 配置文件"></a>3.3 配置文件</h3><p>找到D:\web中的_config.yml文件，打开</p><p>将最后几行改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:你的github用户名&#x2F;你的github用户.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="3-4-写博客"><a href="#3-4-写博客" class="headerlink" title="3.4 写博客"></a>3.4 写博客</h3><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span><br><span class="line">$ hexo s # 启动服务</span><br></pre></td></tr></table></figure><p>然后你就可以愉快的写博客了！</p><p>通过以下命令新建一篇文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章 </span><br></pre></td></tr></table></figure><p>通过代码新建的文章保存在/source/_posts目录下，你也可以直接在该目录下新建md文件进行编辑。</p><p>编辑完成后可预览网页：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g  #生成加预览</span><br></pre></td></tr></table></figure><p>预览网址为：<a href="http://localhost:4000/">http://localhost:4000/</a></p><p>最后，部署到github上，一般网页更新会延迟几分钟：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g  #生成加部署</span><br></pre></td></tr></table></figure><h3 id="3-5-访问博客"><a href="#3-5-访问博客" class="headerlink" title="3.5 访问博客"></a>3.5 访问博客</h3><p>博客地址为：https://用户名.github.io/</p><h3 id="3-6-附录："><a href="#3-6-附录：" class="headerlink" title="3.6 附录："></a>3.6 附录：</h3><p>常用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><h2 id="四、后续"><a href="#四、后续" class="headerlink" title="四、后续"></a>四、后续</h2><p>①修改主题：访问hexo官网，<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>根据各主题的文档提示进行修改，<strong>注意区分根目录与theme目录下的_config.yml文件</strong>。</p><p>②绑定个人域名（具体教程可以百度，哈哈哈我也还没绑定过）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h2&gt;&lt;h3 id=&quot;1-1-环境搭建&quot;&gt;&lt;a href=&quot;#1-1-环境搭建&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>学位论文的撰写</title>
    <link href="http://example.com/2021/04/15/%E5%AD%A6%E4%BD%8D%E8%AE%BA%E6%96%87%E7%9A%84%E6%92%B0%E5%86%99/"/>
    <id>http://example.com/2021/04/15/%E5%AD%A6%E4%BD%8D%E8%AE%BA%E6%96%87%E7%9A%84%E6%92%B0%E5%86%99/</id>
    <published>2021-04-15T06:15:06.000Z</published>
    <updated>2021-07-31T02:35:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>通常来说，学位论文的撰写都会在学校官网给出具体细则。包括字体、大小、行间距、段前段后等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通常来说，学位论文的撰写都会在学校官网给出具体细则。包括字体、大小、行间距、段前段后等。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>扫描隧道显微镜</title>
    <link href="http://example.com/2021/01/20/%E6%89%AB%E6%8F%8F%E9%9A%A7%E9%81%93%E6%98%BE%E5%BE%AE%E9%95%9C/"/>
    <id>http://example.com/2021/01/20/%E6%89%AB%E6%8F%8F%E9%9A%A7%E9%81%93%E6%98%BE%E5%BE%AE%E9%95%9C/</id>
    <published>2021-01-20T02:18:30.000Z</published>
    <updated>2021-07-31T02:38:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、课前复习："><a href="#一、课前复习：" class="headerlink" title="一、课前复习："></a>一、课前复习：</h2><p>在介绍扫描隧道显微镜（简称STM）之前，我们先复习一下小学二年级就学过的知识点：</p><p>① <strong>波粒二象性</strong>：在量子力学里，微观粒子有时会显示出波动性（这时粒子性较不显著），有时又会显示出粒子性（这时波动性较不显著），在不同条件下分别表现出波动或粒子的性质[<a href="https://zh.wikipedia.org/wiki/%E6%B3%A2%E7%B2%92%E4%BA%8C%E8%B1%A1%E6%80%A7#%E5%A4%A7%E5%B0%BA%E5%AF%B8%E7%89%A9%E9%AB%94%E7%9A%84%E6%B3%A2%E5%8B%95%E6%80%A7">1</a>]。</p><p>② <strong>量子隧穿效应</strong>：像电子等微观粒子能够穿入或穿越位势垒的量子行为，尽管位势垒的高度大于粒子的总能量[<a href="https://zh.wikipedia.org/wiki/%E9%87%8F%E5%AD%90%E7%A9%BF%E9%9A%A7%E6%95%88%E6%87%89">2</a>]。</p><p>用人话来说：如图1所示，假设一个“狮子”它能跳起的能量高度为E，在他面前有座山高U，已知E&lt;U，在经典力学中，“狮子”不可能越过高山去吃人；而在量子力学中，由于“狮子”呈现波动性，同时由于隧穿效应的存在，“狮子”有一定概率能够直接穿过高山U。</p><p><a href="https://imgchr.com/i/sRhYM8"><img src="https://s3.ax1x.com/2021/01/20/sRhYM8.png" alt="sRhYM8.png"></a></p><p>图1. 隧穿效应示意图</p><h2 id="二、基本原理"><a href="#二、基本原理" class="headerlink" title="二、基本原理"></a>二、基本原理</h2><p><a href="https://imgchr.com/i/sRhtsS"><img src="https://s3.ax1x.com/2021/01/20/sRhtsS.png" alt="sRhtsS.png"></a></p><p>图2. 扫描隧道显微镜示意图</p><p>扫描隧道显微镜就是利用量子隧穿效应制成的，其核心组成部分是<strong>探针针尖</strong>。基本原理是<em>将原子尺度的极细探针和被研究物质的表面作为两个电极，当样品与针尖的距离非常接近(通常小于1nm）时，在外加电场的作用下，电子会穿过这两个电极之间的势垒从一个电极流向另一电极，此时产生的电流称为隧道电流，通过扫描记录下表面上每一点不同的隧道电流，就可以描绘出样品表面的形貌特征</em>[3]。  </p><p>昨天说过STM类似于“<strong>盲人摸象</strong>”。当我们用手触摸原子时，我们可以根据触感分辨出原子大小、高低等信息，而我们在使用STM进行表征时，针尖就是我们的手，此时的触感就是隧道电流的大小，通过建立隧道电流大小与高度（本质上与样品、针尖的态密度有关，比较复杂，这里就不展开）之间的关系就可以描绘出样品形貌特征。有的人手比较粗糙，可能就无法完全分辨出两个原子之间明显的边界；而有的人手可能比较纤细，就可以轻松分辨出原子。根据这个原理，我们知道STM对于针尖的要求极高，通常情况下，针尖前端为锥形，且要求针尖最前端为单个原子，越接近这个形状，针尖的分辨率越高。</p><p>STM有两种工作模式，分别为<strong>恒高模式</strong>和<strong>恒电流模式</strong>。其实从命名上就不难理解这两种模式的区别：恒高模式，顾名思义就是保持探针针尖与样品的高度不变，测量电流的变化从而描绘出形貌特征；恒电流模式，即保持电流大小不变，通过测量高度变化描绘出形貌特征。</p><h2 id="三、应用"><a href="#三、应用" class="headerlink" title="三、应用"></a>三、应用</h2><p><strong>① 扫描形貌</strong></p><p><a href="https://imgchr.com/i/sRH6hQ"><img src="https://s3.ax1x.com/2021/01/20/sRH6hQ.jpg" alt="sRH6hQ.jpg"></a></p><p>图3. 利用STM扫描的Si(111)面</p><p>STM由于针尖尖端独特的形状及其原理，因此具有极高的分辨率，通常用于扫描样品的形貌特征。</p><p><strong>② 微观操作</strong></p><p>sRH6hQ)<br><a href="https://imgchr.com/i/sRHytg"><img src="https://s3.ax1x.com/2021/01/20/sRHytg.jpg" alt="sRHytg.jpg"></a></p><p>图4. 利用STM移动原子组成的“IBM”图形</p><p>昨天分享的视频《A BOY AND HIS ATOM》，其原理就是利用STM移动原子，通过定格动画的形式制作的。</p><p>参考文献：</p><p>[1] 维基百科：波粒二象性</p><p>[2] 维基百科：量子隧穿效应</p><p>[3]《扫描探针显微学》课件——中科大，秦胜勇  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、课前复习：&quot;&gt;&lt;a href=&quot;#一、课前复习：&quot; class=&quot;headerlink&quot; title=&quot;一、课前复习：&quot;&gt;&lt;/a&gt;一、课前复习：&lt;/h2&gt;&lt;p&gt;在介绍扫描隧道显微镜（简称STM）之前，我们先复习一下小学二年级就学过的知识点：&lt;/p&gt;
&lt;p&gt;① </summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习 - 总结" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0-%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Python学习总结01</title>
    <link href="http://example.com/2020/04/26/Python%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%9301/"/>
    <id>http://example.com/2020/04/26/Python%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%9301/</id>
    <published>2020-04-26T08:21:49.000Z</published>
    <updated>2021-04-15T06:24:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font size=5>数据类型之字符串：</font><br></strong></p><p>format()方法格式化数字时特殊格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;:<span class="number">.2</span>f&#125;：表示保留两位小数。</span><br><span class="line"></span><br><span class="line">&#123;:<span class="number">.2</span>e&#125;：表示保留两位小数点的指数。</span><br><span class="line"></span><br><span class="line">&#123;:<span class="number">.2</span>%&#125;：表示保留两位小数点的百分比。</span><br><span class="line"></span><br><span class="line">&#123;:,&#125;：表示以逗号分隔数字，如<span class="number">2</span>,<span class="number">222</span>,<span class="number">222</span>。</span><br><span class="line"></span><br><span class="line">&#123;:*&gt;10d&#125;：表示用*填充数字，使总宽度为<span class="number">10</span>，并且向右对齐，&gt;为右对齐，&lt;为左对齐，^为中间对齐。</span><br><span class="line"></span><br><span class="line">&#123;:b&#125;：二进制数，若想输出结果时前加格式0b，则格式化为&#123;:<span class="comment">#b&#125;。</span></span><br><span class="line"></span><br><span class="line">&#123;:o&#125;：八进制数，若想输出结果时前加格式0o，则格式化为&#123;:<span class="comment">#o&#125;。</span></span><br><span class="line"></span><br><span class="line">&#123;:x&#125;：十六进制数，若想输出结果时前加格式0x，则格式化为&#123;:<span class="comment">#x&#125;。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;font size=5&gt;数据类型之字符串：&lt;/font&gt;&lt;br&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;format()方法格式化数字时特殊格式&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="学习" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>美丽的一周年礼物</title>
    <link href="http://example.com/2020/03/14/%E6%88%91%E4%B8%8E%E7%BE%8E%E4%B8%BD%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
    <id>http://example.com/2020/03/14/%E6%88%91%E4%B8%8E%E7%BE%8E%E4%B8%BD%E7%9A%84%E4%B8%80%E5%A4%A9/</id>
    <published>2020-03-14T07:18:30.000Z</published>
    <updated>2021-04-15T06:23:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2020年3月14日星期六，离我跟美丽在一起500天还有两天。<br><br>给大家晒一下一周年的时候美丽送我的礼物~<br><br></p><center><font color=#1E90FF size=6 face="黑体">全球唯一纯手工定制款AJ11白蛇！</font></center><img src="/img/xie.jpg"> <br><center>    <font color=#1E90FF size=5 face="黑体">我</font>    <font color=#1E90FF size=5 face="黑体">爱</font    ><font color=#1E90FF size=5 face="黑体">美</font>    <font color=#1E90FF size=5 face="黑体">丽！</font></center>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天是2020年3月14日星期六，离我跟美丽在一起500天还有两天。&lt;br&gt;&lt;br&gt;给大家晒一下一周年的时候美丽送我的礼物~&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;center&gt;&lt;font color=#1E90FF size=6 face=&quot;黑体&quot;&gt;全球唯一纯手工定制款AJ11白蛇！</summary>
      
    
    
    
    <category term="与美丽的生活" scheme="http://example.com/categories/%E4%B8%8E%E7%BE%8E%E4%B8%BD%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="Emily&amp;Alex" scheme="http://example.com/tags/Emily-Alex/"/>
    
  </entry>
  
  <entry>
    <title>手机摄影01</title>
    <link href="http://example.com/2019/11/27/hello-world/"/>
    <id>http://example.com/2019/11/27/hello-world/</id>
    <published>2019-11-27T00:58:54.000Z</published>
    <updated>2021-04-15T06:24:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>po一些以前用手机拍的照片把<br></p><center>与室友某年青海湖国庆游</center><img src="/img/7.jpg"><center>光影</center><img src="/img/2.jpg"><center>月上云梢</center><img src="/img/3.jpg"><center>造楼（1）</center><img src="/img/4.jpg"><center>造楼（2）</center><img src="/img/5.jpg"><center>孤独旅人</center><img src="/img/6.jpg"><center>西湖</center><img src="/img/8.jpg">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;po一些以前用手机拍的照片把&lt;br&gt;&lt;/p&gt;
&lt;center&gt;与室友某年青海湖国庆游&lt;/center&gt;
&lt;img src=&quot;/img/7.jpg&quot;&gt;
&lt;center&gt;光影&lt;/center&gt;
&lt;img src=&quot;/img/2.jpg&quot;&gt;
&lt;center&gt;月上云梢&lt;/cente</summary>
      
    
    
    
    <category term="手机摄影" scheme="http://example.com/categories/%E6%89%8B%E6%9C%BA%E6%91%84%E5%BD%B1/"/>
    
    
    <category term="rubbish" scheme="http://example.com/tags/rubbish/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog!</title>
    <link href="http://example.com/2019/11/26/Welcome-to-my-blog/"/>
    <id>http://example.com/2019/11/26/Welcome-to-my-blog/</id>
    <published>2019-11-26T00:58:54.000Z</published>
    <updated>2021-04-15T06:24:47.000Z</updated>
    
    <content type="html"><![CDATA[<center>This is my first blog....</center><p>记忆力不好，留点hexo命令提醒自己：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章 </span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line">hexo deploy -g  #生成加部署</span><br><span class="line">hexo server -g  #生成加预览</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;center&gt;This is my first blog....&lt;/center&gt;

&lt;p&gt;记忆力不好，留点hexo命令提醒自己：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="日常" scheme="http://example.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="rubbish" scheme="http://example.com/tags/rubbish/"/>
    
  </entry>
  
</feed>
